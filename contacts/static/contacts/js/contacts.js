document.addEventListener("DOMContentLoaded", function () {
  const inputDisplay = document.querySelector("#id_phone_display");
  const hiddenInput = document.querySelector("#id_phone");
  const form = document.querySelector("form");
  const popup = document.querySelector(".form__popup");
  const popupClose = document.querySelector(".form__popupClose");

  const iti = window.intlTelInput(inputDisplay, {
      initialCountry: "tm",
      separateDialCode: true,
      nationalMode: false,
      utilsScript: "https://cdnjs.cloudflare.com/ajax/libs/intl-tel-input/17.0.8/js/utils.js"
  });

  form.addEventListener("submit", function (e) {
      e.preventDefault(); // –û—Ç–º–µ–Ω—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ —Ñ–æ—Ä–º—ã (–ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã)

      // –ü–æ–ª—É—á–∞–µ–º –∫–æ–¥ —Å—Ç—Ä–∞–Ω—ã –∏–∑ DOM
      const dialCodeElement = document.querySelector(".iti__selected-dial-code");
      const dialCode = dialCodeElement ? dialCodeElement.textContent.trim() : "";

      // –ü–æ–ª—É—á–∞–µ–º –Ω–æ–º–µ—Ä, –≤–≤–µ–¥—ë–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º
      const localNumber = inputDisplay.value.trim();

      // –°–∫–ª–µ–∏–≤–∞–µ–º
      const fullNumber = `${dialCode}${localNumber}`;

      // –ü–æ–¥—Å—Ç–∞–≤–ª—è–µ–º –≤ —Å–∫—Ä—ã—Ç—ã–π input
      hiddenInput.value = fullNumber;
      console.log("üìû –û—Ç–ø—Ä–∞–≤–ª—è–µ–º:", fullNumber);

      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ø–∞–ø
      popup.classList.add("active");

      // –ü–æ–¥–≥–æ—Ç–æ–≤–∏–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏
      const formData = new FormData(form);

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ —á–µ—Ä–µ–∑ AJAX —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º fetch
      fetch(form.action, {
          method: 'POST',
          body: formData,
      })
      .then(response => response.json())  // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –æ—Ç–≤–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç JSON
      .then(data => {
          console.log("–û—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞:", data);
          form.reset(); // –û—á–∏—Å—Ç–∫–∞ —Ñ–æ—Ä–º—ã
          // –ï—Å–ª–∏ —Å–µ—Ä–≤–µ—Ä —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–ª –∑–∞–ø—Ä–æ—Å, —Å–∫—Ä—ã–≤–∞–µ–º –ø–æ–ø–∞–ø —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
          setTimeout(function () {
              popup.classList.remove("active");
          }, 3000);
      })
      .catch(error => {
          console.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ä–º—ã:", error);
      });
  });

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ–ø–∞–ø–∞ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –∑–∞–∫—Ä—ã—Ç–∏—è
  popupClose.addEventListener("click", function () {
      popup.classList.remove("active");
  });

  // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ–ø–∞–ø–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ form__popupWrapper
  popup.addEventListener("click", function (e) {
      if (!e.target.closest('.form__popupWrapper')) {
          popup.classList.remove("active");
      }
  });
});



let map = L.map('map').setView([37.959222, 58.421889], 16);

const customIcon = L.icon({
    iconUrl: '/static/contacts/img/marker.png', // –ø—É—Ç—å –¥–æ –∫–∞—Ä—Ç–∏–Ω–∫–∏
    iconSize: [40, 40],
    iconAnchor: [10, 30],
  });


  L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
    maxZoom: 19,
    attribution: '&copy; OpenStreetMap' // —É–±–∏—Ä–∞–µ–º —Å—Å—ã–ª–∫—É/–∞—Ç—Ä–∏–±—É—Ü–∏—é
  }).addTo(map);

  L.marker([37.959222, 58.421889], { icon: customIcon })
  .addTo(map)
  .bindPopup("<b>TMT Consulting Group</b>", {offset: L.point(5, -20)});
